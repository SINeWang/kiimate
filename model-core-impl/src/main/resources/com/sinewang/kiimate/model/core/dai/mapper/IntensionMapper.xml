<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sinewang.kiimate.model.core.dai.mapper.IntensionMapper">

    <resultMap id="Record" type="one.kii.kiimate.model.core.dai.IntensionDai$Record">
        <result column="id" property="id"/>
        <result column="commit" property="commit"/>
        <result column="ext_id" property="extId"/>
        <result column="field" property="field"/>
        <result column="is_single" property="single"/>
        <result column="structure" property="structure"/>
        <result column="ref_m_pub_set" property="refSet"/>
        <result column="visibility" property="visibility"/>
        <result column="is_required" property="required"/>
        <result column="operator_id" property="operatorId"/>
        <result column="begin_time" property="beginTime"/>
        <result column="end_time" property="endTime"/>
    </resultMap>

    <select id="selectLastIntensionsByExtId" resultMap="Record">
        SELECT mint.id, mint.commit, mint.ext_id, mint.field, mint.is_single, mint.structure, mint.ref_m_pub_set, mint.visibility, mint.is_required, mint.operator_id, mint.begin_time, mint.end_time
        FROM km_m_int mint
        WHERE mint.ext_id = #{extId}
        <if test="beginTime != null and endTime != null">
            <![CDATA[
            AND mint.begin_time <= #{beginTime}
            AND ((mint.end_time >= #{endTime}) OR (mint.end_time IS NULL))
            ]]>
        </if>
        <if test="beginTime == null and endTime != null">
            <![CDATA[
            AND mint.begin_time <= #{endTime}
            AND ((mint.end_time >= #{endTime}) OR (mint.end_time IS NULL))
            ]]>
        </if>
        <if test="beginTime != null and endTime == null">
            <![CDATA[
            AND mint.begin_time >= #{beginTime}
            AND mint.end_time IS NULL
            ]]>
        </if>
        <if test="beginTime == null and endTime == null">
            <![CDATA[
            AND mint.end_time IS NULL
            ]]>
        </if>
        ORDER BY mint.begin_time DESC
    </select>

    <select id="selectIntensionsBySet" resultMap="Record">
        SELECT mint.id, mint.commit, mint.ext_id, mint.field, mint.is_single, mint.structure, mint.ref_m_pub_set, mint.visibility, mint.is_required, mint.operator_id, mint.begin_time, mint.end_time
        FROM km_m_int mint, km_m_pub mpub
        WHERE mpub.pub_set = #{set}
        AND mint.id = mpub.int_id
    </select>

    <select id="selectLatestIntensionByExtIdField" resultMap="Record">
        SELECT mint.id, mint.commit, mint.ext_id, mint.field, mint.is_single, mint.structure, mint.ref_m_pub_set, mint.visibility, mint.is_required, mint.operator_id, mint.begin_time, mint.end_time
        FROM km_m_int mint
        WHERE mint.ext_id = #{extId}
        AND mint.field = #{field}
        AND mint.end_time IS NULL
    </select>
    <select id="selectIntensionByConflictKey" resultMap="Record">
        SELECT mint.id, mint.commit, mint.ext_id, mint.field, mint.is_single, mint.structure, mint.ref_m_pub_set, mint.visibility, mint.is_required, mint.operator_id, mint.begin_time, mint.end_time
        FROM km_m_int mint
        WHERE mint.ext_id = #{extId}
        AND mint.field = #{field}
        AND mint.is_single = #{single}
        AND mint.structure = #{structure}
        <if test="refPubSet == null">
            AND mint.ref_m_pub_set IS NULL
        </if>
        <if test="refPubSet != null">
            AND mint.ref_m_pub_set = #{refPubSet}
        </if>
        AND mint.visibility = #{visibility}
        AND mint.is_required = #{required}
        AND mint.end_time IS NULL
    </select>

    <update id="updateLatestIntensionEndTimeById">
        UPDATE km_m_int mint
        SET mint.end_time = #{endTime}
        WHERE mint.id = #{id}
        AND mint.end_time IS NULL
    </update>

    <insert id="insertIntension">
        INSERT INTO km_m_int
        (`id`, `commit`, `ext_id`, `field`, `is_single`, `structure`, `ref_m_pub_set`, `visibility`, `is_required`, `operator_id`, `begin_time`)
        VALUES
        (#{id}, #{commit}, #{extId}, #{field}, #{single}, #{structure}, #{refSet}, #{visibility}, #{required}, #{operatorId}, #{beginTime})
    </insert>

    <delete id="deleteIntensionsByExtId">
        DELETE FROM km_m_int
        WHERE ext_id = #{extId}
    </delete>


</mapper>
